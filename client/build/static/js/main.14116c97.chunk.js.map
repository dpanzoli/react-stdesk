{"version":3,"sources":["Task.js","TaskList.js","TaskDetails.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","state","overdue","selectTask","bind","e","stopPropagation","this","taskHasChanged","id","icon","complete","late","date","className","moment","format","onClick","selected","titre","categories","map","item","lib","Progress","attached","value","total","indicating","React","Component","TaskList","error","isLoaded","items","fetch","then","res","json","result","setState","Object","entries","k","v","title","selectedTask","CommentList","comments","Comment","commentData","requestRefresh","useState","showControls","data","cb","comment","is_subtask","Checkbox","defaultChecked","is_completed","label","requestOptions","method","headers","body","JSON","stringify","idComment","newChecked","response","console","log","user","Button","compact","basic","size","Icon","name","commentId","TaskDetails","progIndicator","newComment","setComments","isLoading","setIsLoading","taskVal","taskTotal","commenting","setCommenting","newCommentText","setNewCommentText","newCommentSubtask","setNewCommentSubtask","useEffect","axios","get","catch","progress","Segment","Dimmer","active","inverted","Loader","content","Form","TextArea","placeholder","onChange","checked","idTask","isSubtask","App","cancelSelection","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14116c97.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment'\nimport 'moment/locale/fr'\nimport './Task.css';\nimport { Progress } from 'semantic-ui-react'\n\nclass Task extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\toverdue: true,\n\t\t};\n\t\tthis.selectTask = this.selectTask.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n\t}\n\t\n\t// Sélectionner la tâche au clic\n\tselectTask(e) {\n\t\te.stopPropagation();\n\t\tthis.props.taskHasChanged(this.props.id);\n\t}\n\t\n\trender() {\n\t\t// Icône devant la fiche\n\t\tlet icon;\n\t\tif (!this.props.date) {\n\t\t\ticon = <div className=\"nodate\"></div>;\n\t\t} else {\n\t\t\ticon = <div className=\"caldate\">\n\t\t\t\t\t<span className=\"month\">\n\t\t\t\t\t\t{moment(this.props.date).format('MMM')}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"day\">\n\t\t\t\t\t\t{moment(this.props.date).format('Do')}\n\t\t\t\t\t</span>\n\t\t\t\t</div>;\n\t\t}\n\t\t// Tâche complète\n\t\tlet complete;\n\t\tif (this.props.complete) {\n\t\t\tcomplete =\t<div className=\"ui green basic label\">\n\t\t\t\t\t\t\t<i className=\"check icon\"></i>Complété\n\t\t\t\t\t\t</div>;\n\t\t}\n\t\t// Tâche en retard\n\t\tlet late;\n\t\tif (!this.state.overdue) {\n\t\t\tlate =\t<div className=\"ui red basic label\">\n\t\t\t\t\t\t<i className=\"exclamation icon\"></i>En retard\n\t\t\t\t\t</div>;\n\t\t}\n\t\t\n\t\t// Composition de la vue\n\t\t\n\t\treturn (\n\t\t\t<div className=\"ui  item\" onClick={this.selectTask}>\n\t\t\t\t{icon}\n\t\t\t\t<div className=\"content\">\n\t\t\t\t<div className={`ui segment ${this.props.selected?'blue raised':''}`} >\n\t\t\t\t\t<h3 className=\"header\">{this.props.titre}</h3>\n\t\t\t\t\t<div className=\"description\">\n\t\t\t\t\t\t<p></p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"extra\">\n\t\t\t\t\t\t<div className=\"ui tag labels\">\n\t\t\t\t\t\t\t{this.props.categories.map(item => (\n\t\t\t\t\t\t\t\t<span key={item.id} className=\"ui label\">\n\t\t\t\t\t\t\t\t\t{item.lib}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{ complete }\n\t\t\t\t\t\t{ late }\n\t\t\t\t\t</div>\n\t\t\t\t\t<Progress attached='bottom' value={2} total={5} indicating />\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\t\n}\n\t\nexport default Task;\n\n","import React from 'react';\nimport Task from './Task';\nimport './TaskList.css';\n\nclass TaskList extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\terror: null,\n\t\t\tisLoaded: false,\n\t\t\titems: [],\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\tfetch('/allTasks')\n\t\t.then( res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\titems: result\n\t\t\t\t});\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\terror\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\t\n\trender() {\n\t\tconst { error, isLoaded, items } = this.state;\n\t\tif (error) {\n\t\t\treturn (\n\t\t\t\t<div className=\"ui negative message\">\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\tChargement des tâches depuis la base de données\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>Le serveur a renvoyé une erreur</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (!isLoaded) {\n\t\t\treturn (\n\t\t\t\t<div className=\"ui active center inline large text loader\">Chargement des tâches</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div id='tasklist' className=\"ui items\">\n\t\t\t\t{ \n\t\t\t\t\tObject.entries(items).map( ([k, v]) =>  \n\t\t\t\t\t\t<Task \n\t\t\t\t\t\t\tkey={k}\n\t\t\t\t\t\t\tid={k}\n\t\t\t\t\t\t\ttitre={v.title}\n\t\t\t\t\t\t\tdate={v.date}\n\t\t\t\t\t\t\tcategories={v.categories}\n\t\t\t\t\t\t\tcomplete={v.complete}\n\t\t\t\t\t\t\ttaskHasChanged={this.props.taskHasChanged}\n\t\t\t\t\t\t\tselected={this.props.selectedTask===k}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\t\nexport default TaskList;\n\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment'\nimport axios from 'axios';\nimport { Progress, Checkbox, Button, Form, Loader, Dimmer, Segment, Icon } from 'semantic-ui-react'\n\nimport 'moment/locale/fr';\nimport './TaskDetails.css';\n\nfunction TaskDetails(props) {\n\n\tconst [comments, setComments] = useState('');\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [completion, setCompletion] = useState(25);\n\tconst [taskVal, setTaskVal] = useState(4);\n\tconst [taskTotal, setTaskTotal] = useState(5);\n\t\n\tconst [commenting, setCommenting] = useState('no');\n\t\n\tconst [newCommentText, setNewCommentText] = useState('');\n\tconst [newCommentSubtask, setNewCommentSubtask] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetComments([]);\n\t\tsetCommenting('no');\n\t\tsetIsLoading(true);\n\t\taxios.get(`/allComments?idTask=${props.id}`)\n\t\t.then((response) => {\n\t\t\tsetComments(response.data);\n\t\t\tsetIsLoading(false);\n\t\t})\n\t\t.catch(error => console.log(`Erreur : ${error}`));\n\t\t\n\t}, [props.id]);\n\n\t/* Indicateur completion*/\n\tlet progIndicator;\n\tif (taskTotal>0) progIndicator = <Progress value={taskVal} total={taskTotal} progress='ratio' indicating />;\n\n\t/* New comment module */\n\tlet newComment;\n\tif (commenting === 'no') {\n\t\tnewComment = <Button onClick={() => setCommenting('writing')} >Commenter</Button>;\n\t} else if (commenting === 'writing' || commenting === 'sending') {\n\t\tnewComment = <Segment>\n\t\t\t\t\t<Dimmer active={commenting=='sending'} inverted>\n\t\t\t\t\t\t<Loader inverted content='Envoi' />\n\t\t\t\t\t</Dimmer>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Form.TextArea \n\t\t\t\t\t\t\tlabel='Nouveau commentaire'\n\t\t\t\t\t\t\tplaceholder='&Eacute;crivez ici ...' \n\t\t\t\t\t\t\tonChange={(e, data) => {\n\t\t\t\t\t\t\t\tsetNewCommentText(data.value)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Checkbox \n\t\t\t\t\t\t\tlabel='Ce commentaire est une sous-tâche' \n\t\t\t\t\t\t\tonChange={(e, data) => {\n\t\t\t\t\t\t\t\tsetNewCommentSubtask(data.checked)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button onClick={() => setCommenting('sending')}>Enregistrer</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Segment>;\n\t} \n\t\n\tuseEffect(() => {\n\t\tif (commenting=='sending') {\n\t\t\tconst requestOptions = {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tidTask: props.id,\n\t\t\t\t\tcomment: newCommentText,\n\t\t\t\t\tisSubtask: newCommentSubtask,\n\t\t\t\t})\n\t\t\t};\n\t\t\tfetch('/sendComment', requestOptions)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tprops.requestRefresh()\n\t\t\t});\n\t\t}\n\t}, [commenting]);\n\t\n\tif (props.id === -1) return ( <div></div> );\n\treturn (\n\t\t<div id='taskdetails' className=\"ui piled segment\" onClick={(e) => e.stopPropagation()}>\n\t\t\t<h4>Détails de la tâche {props.id} </h4>\n\t\t\t{\n\t\t\t\tprogIndicator\n\t\t\t}\n\t\t\t{\n\t\t\t\tisLoading?\n\t\t\t\t<div className=\"ui active center inline loader\"></div>:\n\t\t\t\t<CommentList \n\t\t\t\t\tcomments={comments} \n\t\t\t\t\trequestRefresh={props.requestRefresh}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t{\n\t\t\t\tnewComment\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nfunction CommentList(props) {\n\treturn(\n\t\t<div className=\"ui divided items\">\n\t\t{\n\t\t\tprops.comments.map((item) => \n\t\t\t\t<Comment \n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tcommentData={item} \n\t\t\t\t\trequestRefresh={props.requestRefresh}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\t</div>\n\t);\n}\n\nfunction Comment(props) {\n\n\tconst [data, setData] = useState({  showControls: true });\n\n\tlet cb = <div>{props.commentData.comment}</div>;\n\tif (props.commentData.is_subtask) {\n\t\tcb = <Checkbox \n\t\t\tdefaultChecked={props.commentData.is_completed}\n\t\t\tlabel={props.commentData.comment} \n\t\t\tonClick={ (e) => {\n\t\t\t\tconst requestOptions = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tidComment: props.commentData.id,\n\t\t\t\t\t\tnewChecked: !props.commentData.is_completed\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tfetch('/checkComment', requestOptions)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tconsole.log('refresh component only');\n\t\t\t\t});\n\t\t\t}}\n\t\t/>;\n\t}\n\n\treturn (\n\t\t<div className=\"item\">\n\t\t\t<div className=\"content\">\n\t\t\t\t{ cb}\t\n\t\t\t\t<div className=\"extra\">\n\t\t\t\t\tLe {moment(props.commentData.date).format('Do MMMM YYYY')}\n\t\t\t\t\tpar {props.commentData.user}\n\t\t\t\t\t<span className={`control ${data.showControls?'shown':''}`} >\n\t\t\t\t\t\t&nbsp;&mdash;&nbsp;\t\t\t\t\t\n\t\t\t\t\t\t<Button compact basic size='mini' icon>\n\t\t\t\t\t\t\t<Icon name='edit' />\n\t\t\t\t\t\t\tModifier\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button compact basic size='mini' icon\n\t\t\t\t\t\t\tonClick={ (e) => { \n\t\t\t\t\t\t\t\tconsole.log(props);\n\t\t\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\t\t\t\tcommentId: props.commentData.id\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfetch('/deleteComment', requestOptions)\n\t\t\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\t\t\tprops.requestRefresh()\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Icon name='delete' />\n\t\t\t\t\t\t\tSupprimer\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default TaskDetails;\n\n","import React from 'react';\nimport TaskList from './TaskList';\nimport TaskDetails from './TaskDetails';\nimport './App.css';\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tselectedTask: -1\n\t\t};\n\t\tthis.taskHasChanged = this.taskHasChanged.bind(this);\n\t\tthis.cancelSelection = this.cancelSelection.bind(this);\n\t}\n\t\n\ttaskHasChanged(id) {\n\t\tthis.setState({selectedTask: id});\n\t}\n\t\n\tcancelSelection() {\n\t\tthis.setState({selectedTask: -1});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h1 className=\"ui header\">ST Desk</h1>\n\t\t\t\t<div className=\"ui two column grid\" onClick={this.cancelSelection}>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<TaskList\n\t\t\t\t\t\t\ttaskHasChanged={this.taskHasChanged}\n\t\t\t\t\t\t\tselectedTask={this.state.selectedTask}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<TaskDetails \n\t\t\t\t\t\t\tid={this.state.selectedTask}\n\t\t\t\t\t\t\trequestRefresh={this.taskHasChanged}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\t\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}